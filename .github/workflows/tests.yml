---
on:
  push:
    branches:
      - master
      - develop
  pull_request:

name: Tests
jobs:
  test:
    name: Test suite ${{ matrix.profile }}
    runs-on: k8s-infrastructure-dind
    strategy:
      fail-fast: false
      matrix:
        profile: [ mainnet, testnet, mainnet-silo, testnet-silo ]
    steps:
      - name: Potential broken submodules fix
        run: |
          git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :
      - name: Clone the repository
        uses: actions/checkout@v4
      - name: Install dependencies
        run: scripts/ci-deps/dind.sh
      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache: false
          toolchain: stable
          override: false
      - name: Cargo Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ matrix.profile }}-cargo-test
      - name: Check cache
        run: |
          ls -la target/
          ls -la target/liquidity-protocol
          ls -la target/limit-order-protocol
      - name: Setup Node and cache
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: yarn
          cache-dependency-path: |
            etc/eth-contracts/yarn.lock
            etc/tests/uniswap/yarn.lock
      - name: Install dependencies
        run: cargo +stable make -V || cargo +stable install cargo-make
      - name: Build main contract
        run: |
          case ${{ matrix.profile }} in
            mainnet-silo)
              cargo make --profile mainnet build-test
              ;;
            testnet-silo)
              cargo make --profile testnet build-test
              ;;
            *)
              ;;
          esac
      - name: Tests ${{ matrix.profile }}
        run: cargo make --profile ${{ matrix.profile }} test-flow

  test_modexp:
    name: Test modexp suite ${{ matrix.profile }}
    runs-on: k8s-infrastructure-native
    container: ubuntu:20.04
    strategy:
      fail-fast: false
      matrix:
        profile: [ mainnet, testnet ]
    steps:
      - name: Potential broken submodules fix
        run: |
          git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :
      - name: Clone the repository
        uses: actions/checkout@v4
      - name: Install dependencies
        run: scripts/ci-deps/native.sh
      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache: false
          toolchain: stable
          override: false
      - name: Cargo Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ matrix.profile }}-cargo-modexp-test
      - name: Install dependencies
        run: cargo +stable make -V || cargo +stable install cargo-make
      - name: Setup Node and cache
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Test ${{ matrix.profile }} bench-modexp
        run: cargo make --profile ${{ matrix.profile }} bench-modexp

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
